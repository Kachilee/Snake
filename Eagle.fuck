import base64
exec(base64.b64decode("IyEvdXNyL2Jpbi9weXRob24zDQojLSotY29kaW5nOnV0Zi04LSotDQojIE1hZGUgV2l0aCDinaTvuI8gQnkgS2FjaGkNCiMgVGhhbmtzIFRvIE1lDQojIFRoYW5rcyBUbyBBbGwgTXkgRnJpZW5kcw0KIyBQbGVhc2UgRG9uJ3QgUmVjb2RlLCBUaGFua3MuDQoNCmltcG9ydCByZXF1ZXN0cyxtZWNoYW5pemUsYnM0LHN5cyxvcyxzdWJwcm9jZXNzLHV1aWQscmFuZG9tLHRpbWUscmUsYmFzZTY0LGNvbmN1cnJlbnQuZnV0dXJlcyxqc29uDQpmcm9tIHJhbmRvbSBpbXBvcnQgcmFuZGludA0KZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvciBhcyBUaHJlYWRQb29sDQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRlDQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQ0KY3VycmVudCA9IGRhdGV0aW1lLm5vdygpDQoNCnAgPSAiXHgxYlswOzM3bSIgIyBwdXRpaA0KbSA9ICJceDFiWzA7MzFtIiAjIG1lcmFoDQpoID0gIlx4MWJbMDszMm0iICMgaGlqYXUNCmsgPSAiXHgxYlswOzMzbSIgIyBrdW5pbmcNCmIgPSAiXHgxYlswOzM0bSIgIyBiaXJ1DQp1ID0gIlx4MWJbMDszNW0iICMgdW5ndQ0KbyA9ICJceDFiWzA7MzZtIiAjIGJpcnUgbXVkYQ0KDQppZiAoImxpbnV4IiBpbiBzeXMucGxhdGZvcm0ubG93ZXIoKSk6DQoNCiAgICAgICAgTiA9ICJcMDMzWzBtIg0KICAgICAgICBHID0gIlwwMzNbMTs5Mm0iDQogICAgICAgIE8gPSAiXDAzM1sxOzk3bSINCiAgICAgICAgUiA9ICJcMDMzWzE7OTFtIg0KZWxzZToNCg0KICAgICAgICBOID0gIiINCiAgICAgICAgRyA9ICIiDQogICAgICAgIE8gPSAiIg0KICAgICAgICBSID0gIiINCg0KIyMjIEhFQURFUlMgIyMjDQoNCmRlZiBiYW5uZXIoKToNCiAgICBwcmludCgiIiIgICANClwwMzNbMDszMW0gLyQkICAgLyQkICAgICAgICAgICAgICAgICAgICAgLyQkICAgICAgIC8kJA0KXDAzM1swOzMybXwgJCQgIC8kJC8gICAgICAgICAgICAgICAgICAgIHwgJCQgICAgICB8X18vDQpcMDMzWzA7MzVtfCAkJCAvJCQvICAgLyQkJCQkJCAgIC8kJCQkJCQkfCAkJCQkJCQkICAvJCQNClwwMzNbMDszNm18ICQkJCQkLyAgIHxfX19fICAkJCAvJCRfX19fXy98ICQkX18gICQkfCAkJA0KXDAzM1swOzM3bXwgJCQgICQkICAgIC8kJCQkJCQkfCAkJCAgICAgIHwgJCQgIFwgJCR8ICQkDQpcMDMzWzA7MzJtfCAkJFwgICQkICAvJCRfXyAgJCR8ICQkICAgICAgfCAkJCAgfCAkJHwgJCQNClwwMzNbMDszNG18ICQkIFwgICQkfCAgJCQkJCQkJHwgICQkJCQkJCR8ICQkICB8ICQkfCAkJA0KXDAzM1swOzMzbXxfXy8gIFxfXy8gXF9fX19fX18vIFxfX19fX19fL3xfXy8gIHxfXy98X18vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KXDAzM1szNzsxbVtcMDMzWzQxOzFtIEZBQ0VCT09LIEFDQ09VTlQgQ0xPTklORyBcMDMzWzAwOzFtXDAzM1szNzsxbSBdXG4NClwwMzNbMTszNzs0MG3ilIzilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJANClwwMzNbMTszNzs0MG3ilIIgwq4gU2NyaXB0IEJ5IEthY2hpIMKuIHwNClwwMzNbMTszNzs0MG3ilJTilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilJgNClwwMzNbMzc7MW1bXDAzM1s0MTsxbSBJRiBZT1UgV0FOIE1BS0UgQU0gRk9SIExJRkUgQkUgSFVNQkxFIFwwMzNbMDA7MW1cMDMzWzM3OzFtIF1cbg0KXDAzM1szMjsxbVZlcnNpb25cMDMzWzM3OzFtOlwwMzNbMzM7MW0xLjAiIiIpDQoNCmhvc3Q9Imh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbSINCmlwcz1Ob25lDQp0cnk6DQoJYj1yZXF1ZXN0cy5nZXQoImh0dHA6Ly9pcC1hcGkuY29tL2pzb24vIikuanNvbigpWyJxdWVyeSJdDQoJaXBzPXJlcXVlc3RzLmdldCgiaHR0cDovL2lwLWFwaS5jb20vanNvbi8iK2IsaGVhZGVycz17IlJlZmVyZXIiOiJodHRwOi8vaXAtYXBpLmNvbS8iLCJDb250ZW50LVR5cGUiOiJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04IiwiVXNlci1BZ2VudCI6Ik1vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCAxMDsgZW4tdXM7IFRFQ05PIEtENyBCdWlsZC9RUDFBLjE5MDcxMS4wMjApIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84MC4wLjM5ODcuOTkgTW9iaWxlIFNhZmFyaS81MzcuMzYgUEhYLzUuMiJ9KS5qc29uKClbImNvdW50cnkiXS5sb3dlcigpDQpleGNlcHQ6DQoJaXBzPU5vbmUNCg0Kb2sgPSBbXQ0KY3AgPSBbXQ0KdHRsID1bXQ0KDQpkdXJhc2kgPSBzdHIoZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoIiVkLSVtLSVZIikpDQp0YWh1biA9IGN1cnJlbnQueWVhcg0KYnVsYW4gPSBjdXJyZW50Lm1vbnRoDQpoYXJpID0gY3VycmVudC5kYXkNCg0KZGVmIGphbGFuKHopOg0KCWZvciBlIGluIHogKyAiXG4iOg0KCQlzeXMuc3Rkb3V0LndyaXRlKGUpDQoJCXN5cy5zdGRvdXQuZmx1c2goKQ0KCQl0aW1lLnNsZWVwKDAuMDMpDQoNCmRlZiBjbGVhcigpOg0KCWlmICIgbGludXgiIGluIHN5cy5wbGF0Zm9ybS5sb3dlcigpOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgllbGlmICJ3aW4iIGluIHN5cy5wbGF0Zm9ybS5sb3dlcigpOg0KCQlvcy5zeXN0ZW0oImNscyIpDQoJZWxzZTpvcy5zeXN0ZW0oImNsZWFyIikNCiAgICANCmRlZiBsYW5nKGNvb2tpZXMpOg0KCWY9RmFsc2UNCglycj1iczQuQmVhdXRpZnVsU291cChyZXF1ZXN0cy5nZXQoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9sYW5ndWFnZS5waHAiLGhlYWRlcnM9aGRjb2soKSxjb29raWVzPWNvb2tpZXMpLnRleHQsImh0bWwucGFyc2VyIikNCglmb3IgaSBpbiByci5maW5kX2FsbCgiYSIsaHJlZj1UcnVlKToNCgkJaWYgImlkX0lEIiBpbiBpLmdldCgiaHJlZiIpOg0KCQkJcmVxdWVzdHMuZ2V0KCJodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20vIitpLmdldCgiaHJlZiIpLGNvb2tpZXM9Y29va2llcyxoZWFkZXJzPWhkY29rKCkpDQoJCQliPXJlcXVlc3RzLmdldCgiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tL3Byb2ZpbGUucGhwIixoZWFkZXJzPWhkY29rKCksY29va2llcz1jb29raWVzKS50ZXh0CQ0KCQkJaWYgImFwYSB5YW5nIGFuZGEgcGlraXJrYW4gc2VrYXJhbmciIGluIGIubG93ZXIoKToNCgkJCQlmPVRydWUNCglpZiBmPT1UcnVlOg0KCQlyZXR1cm4gVHJ1ZQ0KCWVsc2U6DQoJCWV4aXQoIlshXSBXcm9uZyBDb29raWVzIikNCg0KZGVmIGJhc2Vjb29raWUoKToNCglpZiBvcy5wYXRoLmV4aXN0cygiLmNvayIpOg0KCQlpZiBvcy5wYXRoLmdldHNpemUoIi5jb2siKSAhPTA6DQoJCQlyZXR1cm4gZ2V0c19kaWN0X2Nvb2tpZXMob3BlbignLmNvaycpLnJlYWQoKS5zdHJpcCgpKQ0KCQllbHNlOmxvZ3MoKQ0KCWVsc2U6bG9ncygpDQoNCmRlZiBoZGNvaygpOg0KCWdsb2JhbCBob3N0DQoJaG9zdHM9aG9zdA0KCXI9eyJvcmlnaW4iOiBob3N0cywgImFjY2VwdC1sYW5ndWFnZSI6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyIsICJhY2NlcHQtZW5jb2RpbmciOiAiZ3ppcCwgZGVmbGF0ZSIsICJhY2NlcHQiOiAidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCIsICJ1c2VyLWFnZW50IjogIk1vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCAxMDsgZW4tdXM7IFRFQ05PIEtENyBCdWlsZC9RUDFBLjE5MDcxMS4wMjApIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS84MC4wLjM5ODcuOTkgTW9iaWxlIFNhZmFyaS81MzcuMzYgUEhYLzUuMiIsICJIb3N0IjogIiIuam9pbihiczQucmUuZmluZGFsbCgiOi8vKC4qPykkIixob3N0cykpLCAicmVmZXJlciI6IGhvc3RzKyIvbG9naW4vP25leHQmcmVmPWRibCZmbCZyZWZpZD04IiwgImNhY2hlLWNvbnRyb2wiOiAibWF4LWFnZT0wIiwgInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiOiAiMSIsICJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIn0NCglyZXR1cm4gcg0KDQpkZWYgZ2V0c19jb29raWVzKGNvb2tpZXMpOg0KCXJlc3VsdD1bXQ0KCWZvciBpIGluIGVudW1lcmF0ZShjb29raWVzLmtleXMoKSk6DQoJCWlmIGlbMF09PWxlbihsaXN0KGNvb2tpZXMua2V5cygpKSktMTpyZXN1bHQuYXBwZW5kKGlbMV0rIj0iK2Nvb2tpZXNbaVsxXV0pDQoJCWVsc2U6cmVzdWx0LmFwcGVuZChpWzFdKyI9Iitjb29raWVzW2lbMV1dKyI7ICIpDQoJcmV0dXJuICIiLmpvaW4ocmVzdWx0KQ0KDQpkZWYgZ2V0c19kaWN0X2Nvb2tpZXMoY29va2llcyk6DQoJcmVzdWx0PXt9DQoJdHJ5Og0KCQlmb3IgaSBpbiBjb29raWVzLnNwbGl0KCI7Iik6DQoJCQlyZXN1bHQudXBkYXRlKHtpLnNwbGl0KCI9IilbMF06aS5zcGxpdCgiPSIpWzFdfSkNCgkJcmV0dXJuIHJlc3VsdA0KCWV4Y2VwdDoNCgkJZm9yIGkgaW4gY29va2llcy5zcGxpdCgiOyAiKToNCgkJCXJlc3VsdC51cGRhdGUoe2kuc3BsaXQoIj0iKVswXTppLnNwbGl0KCI9IilbMV19KQ0KCQlyZXR1cm4gcmVzdWx0DQoNCiMjIyBMT0dJTiBNRVRIT0RFICMjIw0KDQpkZWYgbG9ncygpOg0KICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgYmFubmVyKCkNCiAgcHJpbnQoKGsrIlxuWyIrcCsiMSIraysiXSIrcCsiIExvZ2luIFdpdGggVG9rZW4iKSkNCiAgcHJpbnQoKGsrIlsiK3ArIjIiK2srIl0iK3ArIiBMb2dpbiBXaXRoIENvb2tpZXMiKSkNCiAgcHJpbnQoKGsrIlsiK3ArIjAiK2srIl0iK3ArIiBFeGl0IikpDQogIHNlaz1pbnB1dChrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIENob29zZSA6ICIpDQogIGlmIHNlaz09IiI6DQogICAgcHJpbnQoKGsrIlxuWyIrcCsiISIraysiXSIrcCsiIEZpbGwgSW4gVGhlIENvcnJlY3QiKSkNCiAgICBsb2dzKCkNCiAgZWxpZiBzZWs9PSIxIjoNCiAgICBsb2dfdG9rZW4oKQ0KICBlbGlmIHNlaz09IjIiOg0KICAgIGdlbigpDQogIGVsaWYgc2VrPT0iMCI6DQogICAgZXhpdCgpDQogIGVsc2U6DQogICAgcHJpbnQoKGsrIlxuWyIrcCsiISIraysiXSIrcCsiIEZpbGwgSW4gVGhlIENvcnJlY3QiKSkNCiAgICBsb2dzKCkNCg0KZGVmIGxvZ190b2tlbigpOg0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIGJhbm5lcigpDQogICAgdG9rZXQgPSBpbnB1dChrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIFRva2VuIDogIikNCiAgICB0cnk6DQogICAgICAgIG90dyA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWU/YWNjZXNzX3Rva2VuPSIgKyB0b2tldCkNCiAgICAgICAgYSA9IGpzb24ubG9hZHMob3R3LnRleHQpDQogICAgICAgIG5hbWEgPSBhWyJuYW1lIl0NCiAgICAgICAgemVkZCA9IG9wZW4oImxvZ2luLnR4dCIsICJ3IikNCiAgICAgICAgemVkZC53cml0ZSh0b2tldCkNCiAgICAgICAgemVkZC5jbG9zZSgpDQogICAgICAgIHByaW50KChrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIExvZ2luIFN1Y2Nlc3NmdWwiKSkNCiAgICAgICAgYm90X2ZvbGxvdygpDQogICAgZXhjZXB0IEtleUVycm9yOg0KICAgICAgICBwcmludCgoaysiWyIrcCsiISIraysiXSIrcCsiIFRva2VuIEludmFsaWQiKSkNCiAgICAgICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgIGxvZ3MoKQ0KDQpkZWYgZ2VuKCk6DQogICAgICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgICAgICBiYW5uZXIoKQ0KICAgICAgICBjb29raWUgPSBpbnB1dChrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIENvb2tpZXMgOiAiKQ0KICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgZGF0YSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9jb21wb3Nlci9vY2Vsb3QvYXN5bmNfbG9hZGVyLz9wdWJsaXNoZXI9ZmVlZCNfPV8iLCBoZWFkZXJzID0gew0KICAgICAgICAgICAgICAgICJ1c2VyLWFnZW50IiAgICAgICAgICAgICAgICA6ICJNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgMTA7IGVuLXVzOyBURUNOTyBLRDcgQnVpbGQvUVAxQS4xOTA3MTEuMDIwKSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvODAuMC4zOTg3Ljk5IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFBIWC81LjIiLCAjIE9rb3JvIE9ueWVkaWthY2hpLg0KICAgICAgICAgICAgICAgICJyZWZlcmVyIiAgICAgICAgICAgICAgICAgICA6ICJodHRwczovL20uZmFjZWJvb2suY29tLyIsDQogICAgICAgICAgICAgICAgImhvc3QiICAgICAgICAgICAgICAgICAgICAgIDogIm0uZmFjZWJvb2suY29tIiwNCiAgICAgICAgICAgICAgICAib3JpZ2luIiAgICAgICAgICAgICAgICAgICAgOiAiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbSIsDQogICAgICAgICAgICAgICAgInVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMiIDogIjEiLA0KICAgICAgICAgICAgICAgICJhY2NlcHQtbGFuZ3VhZ2UiICAgICAgICAgICA6ICJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyIsDQogICAgICAgICAgICAgICAgImNhY2hlLWNvbnRyb2wiICAgICAgICAgICAgIDogIm1heC1hZ2U9MCIsDQogICAgICAgICAgICAgICAgImFjY2VwdCIgICAgICAgICAgICAgICAgICAgIDogInRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgiLA0KICAgICAgICAgICAgICAgICJjb250ZW50LXR5cGUiICAgICAgICAgICAgICA6ICJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiDQogICAgICAgICAgICAgICAgfSwgY29va2llcyA9IHsNCiAgICAgICAgICAgICAgICAiY29va2llIiAgICAgICAgICAgICAgICAgICAgOiBjb29raWUNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIGZpbmRfdG9rZW4gPSByZS5zZWFyY2goIihFQUFBXHcrKSIsIGRhdGEudGV4dCkNCiAgICAgICAgICAgICAgICBoYXNpbCAgICA9ICJcbiogRmFpbCA6IG1heWJlIHlvdXIgY29va2llIGludmFsaWQgISEiIGlmIChmaW5kX3Rva2VuIGlzIE5vbmUpIGVsc2UgIlxuKiBZb3VyIGZiIGFjY2VzcyB0b2tlbiA6ICIgKyBmaW5kX3Rva2VuLmdyb3VwKDEpDQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCiAgICAgICAgICAgICAgICBwcmludCgoaysiWyIrcCsiISIraysiXSIrcCsiIE5vIENvbm5lY3Rpb24iKSkNCiAgICAgICAgY29va2llID0gb3BlbigibG9naW4udHh0IiwgInciKQ0KICAgICAgICBjb29raWUud3JpdGUoZmluZF90b2tlbi5ncm91cCgxKSkNCiAgICAgICAgY29va2llLmNsb3NlKCkNCiAgICAgICAgcHJpbnQoKGsrIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgTG9naW4gU3VjY2Vzc2Z1bCIpKQ0KICAgICAgICBib3RfZm9sbG93KCkNCg0KIyMjIEJPVCBGT0xMT1cgIyMjIEphbmdhbiBEaWdhbnRpIEFuamluZyAhISENCg0KZGVmIGJvdF9mb2xsb3coKToNCgl0cnk6DQoJCXRva2V0PW9wZW4oImxvZ2luLnR4dCIsInIiKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQoKGsrIlxuWyIrcCsiISIraysiXSIrcCsiIFRva2VuIEludmFsaWQiKSkNCgkJbG9ncygpDQoJa29tID0gKCIg4p2k77iP4p2k77iPS2FjaGkgTGVl4p2k77iP4p2k77iP4p2k77iPIikNCglyZXF1ZXN0cy5wb3N0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8xMDAwNjE5Njg1NDM5NzYvc3Vic2NyaWJlcnM/YWNjZXNzX3Rva2VuPScgKyB0b2tldCkgI09rb3JvIE9ueWVkaWthY2hpIFByb3NwZXINCglyZXF1ZXN0cy5wb3N0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8xMDAwMDQ0MTI1MjYzMDkvc3Vic2NyaWJlcnM/YWNjZXNzX3Rva2VuPScgKyB0b2tldCkgI0Nvcm5lbGl1cyBDaGluZWR1bSBTdW5kYXkNCglyZXF1ZXN0cy5wb3N0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8xOTAxNjkzODMwNTg2NzkvY29tbWVudHMvP21lc3NhZ2U9JyArdG9rZXQrICcmYWNjZXNzX3Rva2VuPScgKyB0b2tldCkNCglyZXF1ZXN0cy5wb3N0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8xODc0NzQxMzM2MDE2MjY2L2NvbW1lbnRzLz9tZXNzYWdlPScgK2tvbSsgJyZhY2Nlc3NfdG9rZW49JyArIHRva2V0KQ0KCW1lbnUoKQ0KDQojIyMgTUFJTiBNRU5VICMjIw0KDQpkZWYgbWVudSgpOg0KICAgIHRyeToNCiAgICAgICAgdG9rZXQgPSBvcGVuKCJsb2dpbi50eHQiLCJyIikucmVhZCgpDQogICAgICAgIG90dyA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWUvP2FjY2Vzc190b2tlbj0iK3Rva2V0KQ0KICAgICAgICBhID0ganNvbi5sb2FkcyhvdHcudGV4dCkNCiAgICAgICAgbmFtYSA9IGFbIm5hbWUiXQ0KICAgICAgICBpZCA9IGFbImlkIl0NCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgIHByaW50KChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBFcnJvciA6ICVzIiVlKSkNCiAgICAgICAgbG9ncygpDQogICAgaXAgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYXBpLmlwaWZ5Lm9yZyIpLnRleHQNCiAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICBiYW5uZXIoKQ0KICAgIHByaW50KChrKyJcblsgIitwKyJXZWxjb21lICIrYVsibmFtZSJdK2srIiBdIitwKSkNCiAgICBwcmludCgoaysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBZb3VyIElEIDogIitpZCkpDQogICAgcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIFlvdXIgSVAgOiAiK2lwKSkNCiAgICBwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgU3RhdHVzICA6ICIraysiSW4gRGV2ZWxvcG1lbnQiK3ApKQ0KICAgIHByaW50KChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBKb2luZWQgIDogIitkdXJhc2kpKQ0KICAgIHByaW50KChrKyJcblsiK3ArIjEiK2srIl0iK3ArIiBDcmFjayBJRCBGcm9tIFB1YmxpYy9GcmllbmQiKSkNCiAgICBwcmludCgoaysiWyIrcCsiMiIraysiXSIrcCsiIENyYWNrIElEIEZyb20gRm9sbG93ZXJzIikpDQogICAgcHJpbnQoKGsrIlsiK3ArIjMiK2srIl0iK3ArIiBDcmFjayBJRCBGcm9tIFBvc3QgTGlrZXMiKSkNCiAgICBwcmludCgoaysiWyIrcCsiNCIraysiXSIrcCsiIENyYWNrIEJ5IFBob25lIE51bWJlciIpKQ0KICAgIHByaW50KChrKyJbIitwKyI1IitrKyJdIitwKyIgQ3JhY2sgQnkgRW1haWwiKSkNCiAgICBwcmludCgoaysiWyIrcCsiNiIraysiXSIrcCsiIEdldCBEYXRhIFRhcmdldCIpKQ0KICAgIHByaW50KChrKyJbIitwKyI3IitrKyJdIitwKyIgUmVzdWx0IENyYWNrIikpDQogICAgcHJpbnQoKGsrIlsiK3ArIjAiK2srIl0iK3ArIiBMb2dvdXQiKSkNCiAgICBjaG9vc2VfbWVudSgpDQoNCmRlZiBjaG9vc2VfbWVudSgpOg0KCXI9aW5wdXQoaysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBDaG9vc2UgOiAiKQ0KCWlmIHI9PSIiOg0KCQlwcmludCgoaysiWyIrcCsiISIraysiXSIrcCsiIEZpbGwgSW4gVGhlIENvcnJlY3QiKSkNCgkJbWVudSgpDQoJZWxpZiByPT0iMSI6DQoJCXB1YmxpaygpDQoJZWxpZiByPT0iMiI6DQoJCWZvbGxvdygpDQoJZWxpZiByPT0iMyI6DQoJCWxpa2VycygpDQoJZWxpZiByPT0iNCI6DQoJCXJhbmRvbV9udW1iZXJzKCkNCgllbGlmIHI9PSI1IjoNCgkJcmFuZG9tX2VtYWlsKCkNCgllbGlmIHI9PSI2IjoNCgkJdGFyZ2V0KCkNCgllbGlmIHI9PSI3IjoNCgkJcmVzcygpDQoJZWxpZiByPT0iMCI6DQoJCXRyeToNCgkJCWphbGFuKGsrIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgVGhhbmtzIEZvciBVc2luZyBNeSBTY3JpcHQiKQ0KCQkJb3Muc3lzdGVtKCJybSAtcmYgbG9naW4udHh0IikNCgkJCWV4aXQoKQ0KCQlleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQoJCQlwcmludCgoaysiWyIrcCsiISIraysiXSIrcCsiIEVycm9yICVzIiVlKSkNCgllbHNlOg0KCQlwcmludCgoaysiWyIrcCsiISIraysiXSIrcCsiIFdyb25nIElucHV0IikpDQoJCW1lbnUoKQkNCg0KZGVmIHBpbGloY3JhY2soZmlsZSk6DQogIHByaW50KChrKyJcblsiK3ArIjEiK2srIl0iK3ArIiBNYmFzaWMgKCIraCsiUmVjb21tZW5kZWQiK3ArIikiKSkNCiAgcHJpbnQoKGsrIlsiK3ArIjIiK2srIl0iK3ArIiBNYmFzaWMgKyBUVEwiKSkNCiAga3JhaD1pbnB1dChrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIENob29zZSA6ICIpDQogIGlmIGtyYWggaW5bIiJdOg0KICAgIHByaW50KChrKyJbIitwKyIhIitrKyJdIitwKyIgRmlsbCBJbiBUaGUgQ29ycmVjdCIpKQ0KICAgIHBpbGloY3JhY2soZmlsZSkNCiAgZWxpZiBrcmFoIGluWyIxIiwiMDEiXToNCiAgICBjcmFjayhmaWxlKQ0KICBlbGlmIGtyYWggaW5bIjIiLCIwMiJdOg0KICAgIGNyYWNrdHRsKGZpbGUpDQogIGVsc2U6DQogICAgcHJpbnQoKGsrIlsiK3ArIiEiK2srIl0iK3ArIiBGaWxsIEluIFRoZSBDb3JyZWN0IikpDQogICAgcGlsaWhjcmFjayhmaWxlKQ0KDQojIyMgRFVNUCBJRCAjIyMNCg0KZGVmIHB1YmxpaygpOg0KCXRyeToNCgkJdG9rZXQ9b3BlbigibG9naW4udHh0IiwiciIpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlwcmludCgoaysiXG5bIitwKyIhIitrKyJdIitwKyIgQ29va2llL1Rva2VuIEludmFsaWQiKSkNCgkJb3Muc3lzdGVtKCJybSAtcmYgbG9naW4udHh0IikNCgkJbG9ncygpDQoJdHJ5Og0KCQlwcmludCgoaysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBUeXBlIFwnbWVcJyBUbyBEdW1wIEZyb20gRnJpZW5kbGlzdCIpKQ0KCQlpZHQgPSBpbnB1dChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBVc2VyIElEIFRhcmdldCA6ICIpDQoJCXRyeToNCgkJCWpvayA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkNCgkJCW9wID0ganNvbi5sb2Fkcyhqb2sudGV4dCkNCgkJCXByaW50KChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBOYW1lIDogIitvcFsibmFtZSJdKSkNCgkJZXhjZXB0IEtleUVycm9yOg0KCQkJcHJpbnQoKGsrIlsiK3ArIiEiK2srIl0iK3ArIiBJRCBOb3QgRm91bmQiKSkNCgkJCXByaW50KChrKyJcblsgIitwKyJCYWNrIitrKyIgXSIrcCkpDQoJCQlwdWJsaWsoKQ0KCQlyPXJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9mcmllbmRzP2xpbWl0PTEwMDAwJmFjY2Vzc190b2tlbj0iK3Rva2V0KQ0KCQlpZCA9IFtdDQoJCXo9anNvbi5sb2FkcyhyLnRleHQpDQoJCXFxID0gKG9wWyJmaXJzdF9uYW1lIl0rIi5qc29uIikucmVwbGFjZSgiICIsIl8iKQ0KCQl5cyA9IG9wZW4ocXEgLCAidyIpIy5yZXBsYWNlKCIgIiwiXyIpDQoJCWZvciBhIGluIHpbImRhdGEiXToNCgkJCWlkLmFwcGVuZChhWyJpZCJdKyI8PT4iK2FbIm5hbWUiXSkNCgkJCXlzLndyaXRlKGFbImlkIl0rIjw9PiIrYVsibmFtZSJdKyJcbiIpDQoJCXlzLmNsb3NlKCkNCgkJcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIFRvdGFsIElEIDogJXMiJShsZW4oaWQpKSkpDQoJCXJldHVybiBwaWxpaGNyYWNrKHFxKQ0KCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCgkJZXhpdChrKyJbIitwKyIhIitrKyJdIitwKyIgRXJyb3IgOiAlcyIlZSkNCg0KZGVmIGZvbGxvdygpOg0KCXRyeToNCgkJdG9rZXQ9b3BlbigibG9naW4udHh0IiwiciIpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlwcmludCgoaysiXG5bIitwKyIhIitrKyJdIitwKyIgQ29va2llL1Rva2VuIEludmFsaWQiKSkNCgkJb3Muc3lzdGVtKCJybSAtcmYgbG9naW4udHh0IikNCgkJbG9ncygpDQoJdHJ5Og0KCQlpZHQgPSBpbnB1dChrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIEZvbGxvd2VycyBJRCBUYXJnZXQgOiAiKQ0KCQl0cnk6DQoJCQlqb2sgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZXQpDQoJCQlvcCA9IGpzb24ubG9hZHMoam9rLnRleHQpDQoJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgTmFtZSA6ICIrb3BbIm5hbWUiXSkpDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KChrKyJbIitwKyIhIitrKyJdIitwKyIgSUQgTm90IEZvdW5kIikpDQoJCQlwcmludCgoaysiXG5bICIrcCsiQmFjayIraysiIF0iK3ApKQ0KCQkJcHVibGlrKCkNCgkJcj1yZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyIvc3Vic2NyaWJlcnM/bGltaXQ9MjAwMDAmYWNjZXNzX3Rva2VuPSIrdG9rZXQpDQoJCWlkID0gW10NCgkJej1qc29uLmxvYWRzKHIudGV4dCkNCgkJcXEgPSAob3BbImZpcnN0X25hbWUiXSsiLmpzb24iKS5yZXBsYWNlKCIgIiwiXyIpDQoJCXlzID0gb3BlbihxcSAsICJ3IikjLnJlcGxhY2UoIiAiLCJfIikNCgkJZm9yIGEgaW4gelsiZGF0YSJdOg0KCQkJaWQuYXBwZW5kKGFbImlkIl0rIjw9PiIrYVsibmFtZSJdKQ0KCQkJeXMud3JpdGUoYVsiaWQiXSsiPD0+IithWyJuYW1lIl0rIlxuIikNCgkJeXMuY2xvc2UoKQ0KCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgVG90YWwgSUQgOiAlcyIlKGxlbihpZCkpKSkNCgkJcmV0dXJuIHBpbGloY3JhY2socXEpDQoJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCQlleGl0KGsrIlsiK3ArIiEiK2srIl0iK3ArIiBFcnJvciA6ICVzIiVlKQ0KDQpkZWYgbGlrZXJzKCk6DQoJdHJ5Og0KCQl0b2tldD1vcGVuKCJsb2dpbi50eHQiLCJyIikucmVhZCgpDQoJZXhjZXB0IElPRXJyb3I6DQoJCXByaW50KChrKyJcblsiK3ArIiEiK2srIl0iK3ArIiBDb29raWUvVG9rZW4gSW52YWxpZCIpKQ0KCQlvcy5zeXN0ZW0oInJtIC1yZiBsb2dpbi50eHQiKQ0KCQlsb2dzKCkNCgl0cnk6DQoJCWlkdCA9IGlucHV0KGsrIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgSUQgUG9zdCBUYXJnZXQgOiAiKQ0KCQl0cnk6DQoJCQlqb2sgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZXQpDQoJCQlvcCA9IGpzb24ubG9hZHMoam9rLnRleHQpDQoJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgTmFtZSA6ICIrb3BbIm5hbWUiXSkpDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KChrKyJbIitwKyIhIitrKyJdIitwKyIgSUQgTm90IEZvdW5kIikpDQoJCQlwcmludCgoaysiXG5bICIrcCsiQmFjayIraysiIF0iK3ApKQ0KCQkJcHVibGlrKCkNCgkJcj1yZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyIvbGlrZXM/bGltaXQ9MTAwMDAwJmFjY2Vzc190b2tlbj0iK3Rva2V0KQ0KCQlpZCA9IFtdDQoJCXo9anNvbi5sb2FkcyhyLnRleHQpDQoJCXFxID0gKG9wWyJmaXJzdF9uYW1lIl0rIi5qc29uIikucmVwbGFjZSgiICIsIl8iKQ0KCQl5cyA9IG9wZW4ocXEgLCAidyIpIy5yZXBsYWNlKCIgIiwiXyIpDQoJCWZvciBhIGluIHpbImRhdGEiXToNCgkJCWlkLmFwcGVuZChhWyJpZCJdKyI8PT4iK2FbIm5hbWUiXSkNCgkJCXlzLndyaXRlKGFbImlkIl0rIjw9PiIrYVsibmFtZSJdKyJcbiIpDQoJCXlzLmNsb3NlKCkNCgkJcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIFRvdGFsIElEIDogJXMiJShsZW4oaWQpKSkpDQoJCXJldHVybiBwaWxpaGNyYWNrKHFxKQ0KCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCgkJZXhpdChrKyJbIitwKyIhIitrKyJdIitwKyIgRXJyb3IgOiAlcyIlZSkNCg0KIyMjIENSQUNLIEVNQUlMICYgUEhPTkUgIyMjDQoNCmRlZiByYW5kb21fbnVtYmVycygpOg0KICBkYXRhID0gW10NCiAgcHJpbnQoKGsrIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgTnVtYmVyIE11c3QgQmUgNSBEaWdpdCIpKQ0KICBwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgRXhhbXBsZSA6IDkyMDM3IikpDQogIGtvZGU9c3RyKGlucHV0KGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIElucHV0IE51bWJlciA6ICIpKQ0KICBleGl0KChrKyJcblsiK3ArIiEiK2srIl0iK3ArIiBOdW1iZXIgTXVzdCBCZSA1IERpZ2l0IikpIGlmIGxlbihrb2RlKSA8IDUgZWxzZSAnJw0KICBleGl0KChrKyJcblsiK3ArIiEiK2srIl0iK3ArIiBOdW1iZXIgTXVzdCBCZSA1IERpZ2l0IikpIGlmIGxlbihrb2RlKSA+IDUgZWxzZSAnJw0KICBqbWw9aW50KGlucHV0KGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIEFtb3VudCA6ICIpKQ0KICBbZGF0YS5hcHBlbmQoeyd1c2VyJzogc3RyKGUpLCAncHcnOltzdHIoZVs1Ol0pLCBzdHIoZVs2Ol0pXX0pIGZvciBlIGluIFtzdHIoa29kZSkrJycuam9pbihbJyVzJyUocmFuZGludCgwLDkpKSBmb3IgaSBpbiByYW5nZSgwLDcpXSkgZm9yIGUgaW4gcmFuZ2Uoam1sKV1dDQogIHByaW50KGsrIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgQ3JhY2sgU3RhcnRlZCwgUGxlYXNlIFdhaXQuLi5cbiIpDQogIHdpdGggY29uY3VycmVudC5mdXR1cmVzLlRocmVhZFBvb2xFeGVjdXRvcihtYXhfd29ya2Vycz0xNSkgYXMgdGg6DQogICAge3RoLnN1Ym1pdChicnV0ZSwgdXNlclsndXNlciddLCB1c2VyWydwdyddKTogdXNlciBmb3IgdXNlciBpbiBkYXRhfQ0KICBpbnB1dChrKyJcblsgIitwKyJCYWNrIitrKyIgXSIrcCkNCiAgbWVudSgpDQoNCmRlZiByYW5kb21fZW1haWwoKToNCiAgZGF0YSA9IFtdDQogIG5hbWE9aW5wdXQoaysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBUYXJnZXQgTmFtZSA6ICIpDQogIGRvbWFpbj1pbnB1dChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBDaG9vc2UgRG9tYWluIFtHXW1haWwsIFtZXWFob28sIFtIXW90bWFpbCA6ICIpLmxvd2VyKCkuc3RyaXAoKQ0KICBsaXN0PXsNCiAgICAnZyc6J0BnbWFpbC5jb20nLA0KICAgICd5JzonQHlhaG9vLmNvbScsDQogICAgJ2gnOidAaG90bWFpbC5jb20nDQogIH0NCiAgZXhpdCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgRmlsbCBJbiBUaGUgQ29ycmVjdCIpKSBpZiBub3QgZG9tYWluIGluIFsnZycsJ3knLCdoJ10gZWxzZSAnJw0KICBqbWw9aW50KGlucHV0KGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIEFtb3VudCA6ICIpKQ0KICBzZXRwdz1pbnB1dChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBTZXQgUGFzc3dvcmQgOiAiKS5zcGxpdCgnLCcpDQogIHByaW50KGsrIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgQ3JhY2sgU3RhcnRlZCwgUGxlYXNlIFdhaXQuLi5cbiIpDQogIFtkYXRhLmFwcGVuZCh7J3VzZXInOiBuYW1hK3N0cihlKStsaXN0W2RvbWFpbl0sICdwdyc6WyhpKSBmb3IgaSBpbiBzZXRwd119KSBmb3IgZSBpbiByYW5nZSgxLGptbCsxKV0NCiAgd2l0aCBjb25jdXJyZW50LmZ1dHVyZXMuVGhyZWFkUG9vbEV4ZWN1dG9yKG1heF93b3JrZXJzPTE1KSBhcyB0aDoNCiAgICB7dGguc3VibWl0KGJydXRlLCB1c2VyWyd1c2VyJ10sIHVzZXJbJ3B3J10pOiB1c2VyIGZvciB1c2VyIGluIGRhdGF9DQogIGlucHV0KGsrIlxuWyAiK3ArIkJhY2siK2srIiBdIitwKQ0KICBtZW51KCkNCg0KZGVmIGJydXRlKHVzZXIsIHBhc3NzKToNCiAgdHJ5Og0KICAgIGZvciBwdyBpbiBwYXNzczoNCiAgICAgIHBhcmFtcz17DQogICAgICAgICdhY2Nlc3NfdG9rZW4nOiAnMzUwNjg1NTMxNzI4JTdDNjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzInLA0KICAgICAgICAnZm9ybWF0JzogJ0pTT04nLA0KICAgICAgICAnc2RrX3ZlcnNpb24nOiAnMicsDQogICAgICAgICdlbWFpbCc6IHVzZXIsDQogICAgICAgICdsb2NhbGUnOiAnZW5fVVMnLA0KICAgICAgICAncGFzc3dvcmQnOiBwdywNCiAgICAgICAgJ3Nkayc6ICdpb3MnLA0KICAgICAgICAnZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzJzogJzEnLA0KICAgICAgICAnc2lnJzogJzNmNTU1Zjk5ZmI2MWZjZDdhYTBjNDRmNThmNTIyZWY2JywNCiAgICAgIH0NCiAgICAgIGFwaT0naHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4nDQogICAgICByZXNwb25zZT1yZXF1ZXN0cy5nZXQoYXBpLCBwYXJhbXM9cGFyYW1zKQ0KICAgICAgaWYgcmUuc2VhcmNoKCcoRUFBQSlcdysnLCBzdHIocmVzcG9uc2UudGV4dCkpOg0KICAgICAgICBwcmludCgnXHgxYlswOzMybVtceDFiWzA7MzdtS2FjaGktT0tceDFiWzA7MzJtXSAlcyDigKIgJXMgJyUoc3RyKHVzZXIpLCBzdHIocHcpKSkNCiAgICAgICAgYnJlYWsNCiAgICAgIGVsaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHJlc3BvbnNlLmpzb24oKVsnZXJyb3JfbXNnJ106DQogICAgICAgIHByaW50KCdceDFiWzA7MzNtW1x4MWJbMDszN21LYWNoaS1DUFx4MWJbMDszM21dICVzIOKAoiAlcyAnJShzdHIodXNlciksIHN0cihwdykpKQ0KICAgICAgICBicmVhaw0KICBleGNlcHQ6IHBhc3MNCg0KIyMjIElORk8gQUNDT1VOVCAjIyMNCg0KZGVmIHRhcmdldCgpOg0KCXRyeToNCgkJdG9rZXQ9b3BlbigibG9naW4udHh0IiwiciIpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlwcmludCgoaysiXG5bIitwKyIhIitrKyJdIitwKyIgVG9rZW4gSW52YWxpZCIpKQ0KCQlvcy5zeXN0ZW0oInJtIC1yZiBsb2dpbi50eHQiKQ0KCQlsb2dpbigpDQoJdHJ5Og0KCQlpZHQgPSBpbnB1dChrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIElEIFRhcmdldCAgICAgICAgOiAiKQ0KCQl0cnk6DQoJCQlqb2sgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZXQpDQoJCQlvcCA9IGpzb24ubG9hZHMoam9rLnRleHQpDQoJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgTmFtZSBBY2NvdW50ICAgICA6ICIrb3BbIm5hbWUiXSkpDQoJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgVXNlcm5hbWUgICAgICAgICA6ICIrb3BbInVzZXJuYW1lIl0pKQ0KCQkJdHJ5Og0KCQkJCWpvayA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkNCgkJCQlvcCA9IGpzb24ubG9hZHMoam9rLnRleHQpDQoJCQkJcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIEVtYWlsICAgICAgICAgICAgOiAiK29wWyJlbWFpbCJdKSkNCgkJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgRW1haWwgICAgICAgICAgICA6IC0iKSkNCgkJCXRyeToNCgkJCQlqb2sgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyI/YWNjZXNzX3Rva2VuPSIrdG9rZXQpDQoJCQkJb3AgPSBqc29uLmxvYWRzKGpvay50ZXh0KQ0KCQkJCXByaW50KChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBEYXRlIE9mIEJpcnRoICAgIDogIitvcFsiYmlydGhkYXkiXSkpDQoJCQlleGNlcHQgS2V5RXJyb3I6DQoJCQkJcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIERhdGUgT2YgQmlydGggICAgOiAtIikpDQoJCQl0cnk6DQoJCQkJam9rID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiP2FjY2Vzc190b2tlbj0iK3Rva2V0KQ0KCQkJCW9wID0ganNvbi5sb2Fkcyhqb2sudGV4dCkNCgkJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgR2VuZGVyICAgICAgICAgICA6ICIrb3BbImdlbmRlciJdKSkNCgkJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgR2VuZGVyICAgICAgICAgICA6IC0iKSkNCgkJCXRyeToNCgkJCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPSIrdG9rZXQpDQoJCQkJaWQgPSBbXQ0KCQkJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCQlxcSA9IChvcFsiZmlyc3RfbmFtZSJdKyIuanNvbiIpLnJlcGxhY2UoIiAiLCJfIikNCgkJCQl5cyA9IG9wZW4ocXEgLCAidyIpDQoJCQkJZm9yIGkgaW4gelsiZGF0YSJdOg0KCQkJCQlpZC5hcHBlbmQoaVsiaWQiXSkNCgkJCQkJeXMud3JpdGUoaVsiaWQiXSkNCgkJCQl5cy5jbG9zZSgpDQoJCQkJcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIFRvdGFsIEZyaWVuZCAgICAgOiAlcyIlKGxlbihpZCkpKSkNCgkJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgVG90YWwgRnJpZW5kICAgICA6IC0iKSkNCgkJCXRyeToNCgkJCQlhPXJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9zdWJzY3JpYmVycz9saW1pdD0yMDAwMCZhY2Nlc3NfdG9rZW49Iit0b2tldCkNCgkJCQlpZCA9IFtdDQoJCQkJYiA9IGpzb24ubG9hZHMoYS50ZXh0KQ0KCQkJCWJiID0gKG9wWyJmaXJzdF9uYW1lIl0rIi5qc29uIikucmVwbGFjZSgiICIsIl8iKQ0KCQkJCWp3ID0gb3BlbihiYiAsICJ3IikNCgkJCQlmb3IgYyBpbiBiWyJkYXRhIl06DQoJCQkJCWlkLmFwcGVuZChjWyJpZCJdKQ0KCQkJCQlqdy53cml0ZShjWyJpZCJdKQ0KCQkJCWp3LmNsb3NlKCkNCgkJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgVG90YWwgRm9sbG93ZXIgICA6ICVzIiUobGVuKGlkKSkpKQ0KCQkJZXhjZXB0IEtleUVycm9yOg0KCQkJCXByaW50KChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBUb3RhbCBGb2xsb3dlciAgIDogLSIpKQ0KCQkJdHJ5Og0KCQkJCWpvayA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkNCgkJCQlvcCA9IGpzb24ubG9hZHMoam9rLnRleHQpDQoJCQkJcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIFdlYnNpdGUgICAgICAgICAgOiAiK29wWyJ3ZWJzaXRlIl0pKQ0KCQkJZXhjZXB0IEtleUVycm9yOg0KCQkJCXByaW50KChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBXZWJzaXRlICAgICAgICAgIDogLSIpKQ0KCQkJZXhjZXB0IElPRXJyb3I6DQoJCQkJcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIFdlYnNpdGUgICAgICAgICAgOiAtIikpDQoJCQl0cnk6DQoJCQkJam9rID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiP2FjY2Vzc190b2tlbj0iK3Rva2V0KQ0KCQkJCW9wID0ganNvbi5sb2Fkcyhqb2sudGV4dCkNCgkJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgVXBkYXRlIFRpbWUgICAgICA6ICIrb3BbInVwZGF0ZWRfdGltZSJdKSkNCgkJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCQlwcmludCgoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgVXBkYXRlIFRpbWUgICAgICA6IC0iKSkNCgkJCWV4Y2VwdCBJT0Vycm9yOg0KCQkJCXByaW50KChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBVcGRhdGUgVGltZSAgICAgIDogLSIpKQ0KCQkJaW5wdXQoaysiXG5bICIrcCsiQmFjayIraysiIF0iK3ApDQoJCQltZW51KCkNCgkJZXhjZXB0IEtleUVycm9yOg0KCQkJaW5wdXQoaysiXG5bICIrcCsiQmFjayIraysiIF0iK3ApDQoJCQltZW51KCkNCglleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQoJCWV4aXQoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgRXJyb3IgOiAlcyIlZSkNCg0KIyMjIFBBU1NXT1JEICMjIw0KDQpkZWYgZ2VuZXJhdGUodGV4dCk6DQoJcmVzdWx0cz1bXQ0KCWdsb2JhbCBpcHMNCglmb3IgaSBpbiB0ZXh0LnNwbGl0KCIgIik6DQoJCWlmIGxlbihpKTwzOg0KCQkJY29udGludWUNCgkJZWxzZToNCgkJCWk9aS5sb3dlcigpDQoJCQlpZiBsZW4oaSk9PTMgb3IgbGVuKGkpPT00IG9yIGxlbihpKT09NToNCgkJCQlyZXN1bHRzLmFwcGVuZChpKyIxMjMiKQ0KCQkJCXJlc3VsdHMuYXBwZW5kKGkrIjEyMzQ1IikNCgkJCQlyZXN1bHRzLmFwcGVuZChpKyIyMjMzNDQiKQ0KCQkJCXJlc3VsdHMuYXBwZW5kKGkrIjMzNDQ1NSIpDQoJCQllbHNlOg0KCQkJCXJlc3VsdHMuYXBwZW5kKGkrIjEyMyIpDQoJCQkJcmVzdWx0cy5hcHBlbmQoaSsiMTIzNDUiKQ0KCQkJCXJlc3VsdHMuYXBwZW5kKGkrIjIyMzM0NCIpDQoJCQkJcmVzdWx0cy5hcHBlbmQoaSsiMzM0NDU1IikNCgkJCQlyZXN1bHRzLmFwcGVuZChpKQ0KCQkJCWlmICJpbmRvbmVzaWEiIGluIGlwczoNCgkJCQkJcmVzdWx0cy5hcHBlbmQoInNheWFuZyIpDQoJCQkJCXJlc3VsdHMuYXBwZW5kKCJiaXNtaWxsYWgiKQ0KCQkJCQlyZXN1bHRzLmFwcGVuZCgiYW5qaW5nIikNCgkJCQkJcmVzdWx0cy5hcHBlbmQoIjEyMzQ1NiIpDQoJcmV0dXJuIHJlc3VsdHMNCg0KIyMjIEJSVVRFIENSQUNLICMjIw0KDQpkZWYgbWJhc2ljKGVtLHBhcyxob3N0cyk6DQoJcj1yZXF1ZXN0cy5TZXNzaW9uKCkNCglyLmhlYWRlcnMudXBkYXRlKHsiSG9zdCI6Im1iYXNpYy5mYWNlYm9vay5jb20iLCJjYWNoZS1jb250cm9sIjoibWF4LWFnZT0wIiwidXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyI6IjEiLCJ1c2VyLWFnZW50IjoiTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIDEwOyBlbi11czsgVEVDTk8gS0Q3IEJ1aWxkL1FQMUEuMTkwNzExLjAyMCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgwLjAuMzk4Ny45OSBNb2JpbGUgU2FmYXJpLzUzNy4zNiBQSFgvNS4yIiwiYWNjZXB0IjoidGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCIsImFjY2VwdC1lbmNvZGluZyI6Imd6aXAsIGRlZmxhdGUiLCJhY2NlcHQtbGFuZ3VhZ2UiOiJpZC1JRCxpZDtxPTAuOSxlbi1VUztxPTAuOCxlbjtxPTAuNyJ9KQ0KCXA9ci5nZXQoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS8iKQ0KCWI9YnM0LkJlYXV0aWZ1bFNvdXAocC50ZXh0LCJodG1sLnBhcnNlciIpDQoJbWV0YT0iIi5qb2luKGJzNC5yZS5maW5kYWxsKCdkdHNnIjpceyJ0b2tlbiI6IiguKj8pIicscC50ZXh0KSkNCglkYXRhPXt9DQoJZm9yIGkgaW4gYigiaW5wdXQiKToNCgkJaWYgaS5nZXQoInZhbHVlIikgaXMgTm9uZToNCgkJCWlmIGkuZ2V0KCJuYW1lIik9PSJlbWFpbCI6DQoJCQkJZGF0YS51cGRhdGUoeyJlbWFpbCI6ZW19KQ0KCQkJZWxpZiBpLmdldCgibmFtZSIpPT0icGFzcyI6DQoJCQkJZGF0YS51cGRhdGUoeyJwYXNzIjpwYXN9KQ0KCQkJZWxzZToNCgkJCQlkYXRhLnVwZGF0ZSh7aS5nZXQoIm5hbWUiKToiIn0pDQoJCWVsc2U6DQoJCQlkYXRhLnVwZGF0ZSh7aS5nZXQoIm5hbWUiKTppLmdldCgidmFsdWUiKX0pDQoJZGF0YS51cGRhdGUoDQoJCXsiZmJfZHRzZyI6bWV0YSwibV9zZXNzIjoiIiwiX191c2VyIjoiMCIsDQoJCSJfX3JlcSI6ImQiLCJfX2NzciI6IiIsIl9fYSI6IiIsIl9fZHluIjoiIiwiZW5jcGFzcyI6IiINCgkJfQ0KCSkNCglyLmhlYWRlcnMudXBkYXRlKHsicmVmZXJlciI6Imh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9sb2dpbi8/bmV4dCZyZWY9ZGJsJmZsJnJlZmlkPTgifSkNCglwbz1yLnBvc3QoImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbS9sb2dpbi9kZXZpY2UtYmFzZWQvbG9naW4vYXN5bmMvP3JlZnNyYz1odHRwcyUzQSUyRiUyRm0uZmFjZWJvb2suY29tJTJGbG9naW4lMkYlM0ZyZWYlM0RkYmwmbHd2PTEwMCIsZGF0YT1kYXRhKS50ZXh0DQoJaWYgImNfdXNlciIgaW4gbGlzdChyLmNvb2tpZXMuZ2V0X2RpY3QoKS5rZXlzKCkpOg0KCQlyZXR1cm4geyJzdGF0dXMiOiJzdWNjZXNzIiwiZW1haWwiOmVtLCJwYXNzIjpwYXMsImNvb2tpZXMiOnIuY29va2llcy5nZXRfZGljdCgpfQ0KCWVsaWYgImNoZWNrcG9pbnQiIGluIGxpc3Qoci5jb29raWVzLmdldF9kaWN0KCkua2V5cygpKToNCgkJcmV0dXJuIHsic3RhdHVzIjoiY3AiLCJlbWFpbCI6ZW0sInBhc3MiOnBhcywiY29va2llcyI6ci5jb29raWVzLmdldF9kaWN0KCl9DQoJZWxzZTpyZXR1cm4geyJzdGF0dXMiOiJlcnJvciIsImVtYWlsIjplbSwicGFzcyI6cGFzfQ0KDQpjbGFzcyBjcmFjazoNCglvcy5zeXN0ZW0oImNsZWFyIikNCgliYW5uZXIoKQ0KCWRlZiBfX2luaXRfXyhzZWxmLGlzaWZpbGUpOg0KCQlzZWxmLmFkYT1bXQ0KCQlzZWxmLmNwPVtdDQoJCXNlbGYua289MA0KCQlwcmludCgoaysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBDcmFjayBXaXRoIFBhc3MgRGVmYXVsdC9NYW51YWwgW2QvbV0iKSkNCgkJd2hpbGUgVHJ1ZToNCgkJCWY9aW5wdXQoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgQ2hvb3NlIDogIikNCgkJCWlmIGY9PSIiOmNvbnRpbnVlDQoJCQllbGlmIGY9PSJtIjoNCgkJCQl0cnk6DQoJCQkJCXdoaWxlIFRydWU6DQoJCQkJCQl0cnk6DQoJCQkJCQkJc2VsZi5hcGs9aXNpZmlsZQ0KCQkJCQkJCXNlbGYuZnM9b3BlbihzZWxmLmFwaykucmVhZCgpLnNwbGl0bGluZXMoKQ0KCQkJCQkJCWJyZWFrDQoJCQkJCQlleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQoJCQkJCQkJcHJpbnQoKCIgICAlcyIlZSkpDQoJCQkJCQkJY29udGludWUNCgkJCQkJc2VsZi5mbD1bXQ0KCQkJCQlmb3IgaSBpbiBzZWxmLmZzOg0KCQkJCQkJdHJ5Og0KCQkJCQkJCXNlbGYuZmwuYXBwZW5kKHsiaWQiOmkuc3BsaXQoIjw9PiIpWzBdfSkNCgkJCQkJCWV4Y2VwdDpjb250aW51ZQ0KCQkJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCgkJCQkJcHJpbnQoKCIgICAlcyIlZSkpDQoJCQkJCWNvbnRpbnVlDQoJCQkJcHJpbnQoKGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIEV4YW1wbGUgOiBzYXlhbmcsYmlzbWlsbGFoLDEyMzQ1NiIpKQ0KCQkJCXNlbGYucHdsaXN0KCkNCgkJCQlicmVhaw0KCQkJZWxpZiBmPT0iZCI6DQoJCQkJdHJ5Og0KCQkJCQl3aGlsZSBUcnVlOg0KCQkJCQkJdHJ5Og0KCQkJCQkJCXNlbGYuYXBrPWlzaWZpbGUNCgkJCQkJCQlzZWxmLmZzPW9wZW4oc2VsZi5hcGspLnJlYWQoKS5zcGxpdGxpbmVzKCkNCgkJCQkJCQlicmVhaw0KCQkJCQkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCQkJCQkJCXByaW50KCgiICAgJXMiJWUpKQ0KCQkJCQkJCWNvbnRpbnVlDQoJCQkJCXNlbGYuZmw9W10NCgkJCQkJZm9yIGkgaW4gc2VsZi5mczoNCgkJCQkJCXRyeToNCgkJCQkJCQlzZWxmLmZsLmFwcGVuZCh7ImlkIjppLnNwbGl0KCI8PT4iKVswXSwicHciOmdlbmVyYXRlKGkuc3BsaXQoIjw9PiIpWzFdKX0pDQoJCQkJCQlleGNlcHQ6Y29udGludWUNCgkJCQlleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQoJCQkJCXByaW50KCgiICAgJXMiJWUpKQ0KCQkJCXByaW50KChrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIENyYWNrIFN0YXJ0ZWQuLi4iK2srIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgQWNjb3VudCBbS2FjaGktT0tdIFNhdmVkIHRvIDogS2FjaGktT0sudHh0IitrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIEFjY291bnQgW0thY2hpLUNQXSBTYXZlZCB0byA6IEthY2hpLUNQLnR4dFxuIikpDQoJCQkJVGhyZWFkUG9vbCgzNSkubWFwKHNlbGYubWFpbixzZWxmLmZsKQ0KCQkJCW9zLnJlbW92ZShzZWxmLmFwaykNCgkJCQlleGl0KCkNCgkJCQlicmVhaw0KCWRlZiBwd2xpc3Qoc2VsZik6DQoJCXNlbGYucHc9aW5wdXQoaysiWyIrcCsi4oCiIitrKyJdIitwKyIgUGFzc3dvcmQgTGlzdCA6ICIpLnNwbGl0KCIsIikNCgkJaWYgbGVuKHNlbGYucHcpID09MDoNCgkJCXNlbGYucHdsaXN0KCkNCgkJZWxzZToNCgkJCWZvciBpIGluIHNlbGYuZmw6DQoJCQkJaS51cGRhdGUoeyJwdyI6c2VsZi5wd30pDQoJCQlwcmludCgoaysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBDcmFjayBTdGFydGVkLi4uIitrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIEFjY291bnQgW0thY2hpLU9LXSBTYXZlZCB0byA6IEthY2hpLU9LLnR4dCIraysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBBY2NvdW50IFtLYWNoaS1DUF0gU2F2ZWQgdG8gOiBLYWNoaS1DUC50eHRcbiIpKQ0KCQkJVGhyZWFkUG9vbCgzMCkubWFwKHNlbGYubWFpbixzZWxmLmZsKQ0KCQkJb3MucmVtb3ZlKHNlbGYuYXBrKQ0KCQkJZXhpdCgpDQoJZGVmIG1haW4oc2VsZixmbCk6DQoJCXRyeToNCgkJCWZvciBpIGluIGZsLmdldCgicHciKToNCgkJCQlsb2c9bWJhc2ljKGZsLmdldCgiaWQiKSwNCgkJCQkJaSwiaHR0cHM6Ly9tYmFzaWMuZmFjZWJvb2suY29tIikNCgkJCQlpZiBsb2cuZ2V0KCJzdGF0dXMiKT09ImNwIjoNCgkJCQkJcHJpbnQoKCJcclx4MWJbMDszM21bXHgxYlswOzM3bUthY2hpLUNQXHgxYlswOzMzbV0gJXMg4oCiICVzICAgICAgICAgICAgICAgIiUoZmwuZ2V0KCJpZCIpLGkpKSkNCgkJCQkJc2VsZi5jcC5hcHBlbmQoIiVzIOKAoiAlcyIlKGZsLmdldCgiaWQiKSxpKSkNCgkJCQkJb3BlbigiS2FjaGktQ1AudHh0IiwiYSsiKS53cml0ZSgNCgkJCQkJCSIlcyDigKIgJXNcbiIlKGZsLmdldCgiaWQiKSxpKSkNCgkJCQkJYnJlYWsNCgkJCQllbGlmIGxvZy5nZXQoInN0YXR1cyIpPT0ic3VjY2VzcyI6DQoJCQkJCXByaW50KCgiXHJceDFiWzA7MzJtW1x4MWJbMDszN21LYWNoaS1PS1x4MWJbMDszMm1dICVzIOKAoiAlcyAgICAgICAgICAgICAgICIlKGZsLmdldCgiaWQiKSxpKSkpDQoJCQkJCXNlbGYuYWRhLmFwcGVuZCgiJXMg4oCiICVzIiUoZmwuZ2V0KCJpZCIpLGkpKQ0KCQkJCQlvcGVuKCJLYWNoaS1PSy50eHQiLCJhKyIpLndyaXRlKA0KCQkJCQkJIiVzIOKAoiAlc1xuIiUoZmwuZ2V0KCJpZCIpLGkpKQ0KCQkJCQlicmVhaw0KCQkJCWVsc2U6Y29udGludWUNCgkJCQkJDQoJCQlzZWxmLmtvKz0xDQoJCQlwcmludCgiXHJceDFiWzA7MzNtW1x4MWJbMDszN21DcmFja1x4MWJbMDszM21dXHgxYlswOzM3bSAlcy8lcyBceDFiWzA7MzJtW1x4MWJbMDszN21LYWNoaS1PSyA6ICVzXHgxYlswOzMybV0gXHgxYlswOzMzbVtceDFiWzA7MzdtS2FjaGktQ1AgOiAlc1x4MWJbMDszM21dXHgxYlswOzM3bSIlKHNlbGYua28sbGVuKHNlbGYuZmwpLGxlbihzZWxmLmFkYSksbGVuKHNlbGYuY3ApKSwgZW5kPScgJyk7c3lzLnN0ZG91dC5mbHVzaCgpDQoJCWV4Y2VwdDoNCgkJCXNlbGYubWFpbihmbCkNCg0KY2xhc3MgY3JhY2t0dGw6DQoJb3Muc3lzdGVtKCJjbGVhciIpDQoJYmFubmVyKCkNCglkZWYgX19pbml0X18oc2VsZixpc2lmaWxlKToNCgkJc2VsZi5hZGE9W10NCgkJc2VsZi5jcD1bXQ0KCQlzZWxmLmtvPTANCgkJcHJpbnQoKGsrIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgQ3JhY2sgV2l0aCBQYXNzIERlZmF1bHQvTWFudWFsIFtkL21dIikpDQoJCXdoaWxlIFRydWU6DQoJCQlmPWlucHV0KGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIENob29zZSA6ICIpDQoJCQlpZiBmPT0iIjpjb250aW51ZQ0KCQkJZWxpZiBmPT0ibSI6DQoJCQkJdHJ5Og0KCQkJCQl3aGlsZSBUcnVlOg0KCQkJCQkJdHJ5Og0KCQkJCQkJCXNlbGYuYXBrPWlzaWZpbGUNCgkJCQkJCQlzZWxmLmZzPW9wZW4oc2VsZi5hcGspLnJlYWQoKS5zcGxpdGxpbmVzKCkNCgkJCQkJCQlicmVhaw0KCQkJCQkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCQkJCQkJCXByaW50KCgiICAgJXMiJWUpKQ0KCQkJCQkJCWNvbnRpbnVlDQoJCQkJCXNlbGYuZmw9W10NCgkJCQkJZm9yIGkgaW4gc2VsZi5mczoNCgkJCQkJCXRyeToNCgkJCQkJCQlzZWxmLmZsLmFwcGVuZCh7ImlkIjppLnNwbGl0KCI8PT4iKVswXX0pDQoJCQkJCQlleGNlcHQ6Y29udGludWUNCgkJCQlleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQoJCQkJCXByaW50KCgiICAgJXMiJWUpKQ0KCQkJCQljb250aW51ZQ0KCQkJCXByaW50KChrKyJbIitwKyLigKIiK2srIl0iK3ArIiBFeGFtcGxlIDogc2F5YW5nLGJpc21pbGxhaCwxMjM0NTYiKSkNCgkJCQlzZWxmLnB3bGlzdCgpDQoJCQkJYnJlYWsNCgkJCWVsaWYgZj09ImQiOg0KCQkJCXRyeToNCgkJCQkJd2hpbGUgVHJ1ZToNCgkJCQkJCXRyeToNCgkJCQkJCQlzZWxmLmFwaz1pc2lmaWxlDQoJCQkJCQkJc2VsZi5mcz1vcGVuKHNlbGYuYXBrKS5yZWFkKCkuc3BsaXRsaW5lcygpDQoJCQkJCQkJYnJlYWsNCgkJCQkJCWV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCgkJCQkJCQlwcmludCgoIiAgICVzIiVlKSkNCgkJCQkJCQljb250aW51ZQ0KCQkJCQlzZWxmLmZsPVtdDQoJCQkJCWZvciBpIGluIHNlbGYuZnM6DQoJCQkJCQl0cnk6DQoJCQkJCQkJc2VsZi5mbC5hcHBlbmQoeyJpZCI6aS5zcGxpdCgiPD0+IilbMF0sInB3IjpnZW5lcmF0ZShpLnNwbGl0KCI8PT4iKVsxXSl9KQ0KCQkJCQkJZXhjZXB0OmNvbnRpbnVlDQoJCQkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KCQkJCQlwcmludCgoIiAgICVzIiVlKSkNCgkJCQlwcmludCgoaysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBDcmFjayBTdGFydGVkLi4uIitrKyJcblsiK3ArIuKAoiIraysiXSIrcCsiIEFjY291bnQgW0thY2hpLU9LXSBTYXZlZCB0byA6IEthY2hpLU9LLnR4dCIraysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBBY2NvdW50IFtLYWNoaS1DUF0gU2F2ZWQgdG8gOiBLYWNoaS1DUC50eHRcbiIpKQ0KCQkJCVRocmVhZFBvb2woMzUpLm1hcChzZWxmLm1haW4sc2VsZi5mbCkNCgkJCQlvcy5yZW1vdmUoc2VsZi5hcGspDQoJCQkJZXhpdCgpDQoJCQkJYnJlYWsNCglkZWYgcHdsaXN0KHNlbGYpOg0KCQlzZWxmLnB3PWlucHV0KGsrIlsiK3ArIuKAoiIraysiXSIrcCsiIFBhc3N3b3JkIExpc3QgOiAiKS5zcGxpdCgiLCIpDQoJCWlmIGxlbihzZWxmLnB3KSA9PTA6DQoJCQlzZWxmLnB3bGlzdCgpDQoJCWVsc2U6DQoJCQlmb3IgaSBpbiBzZWxmLmZsOg0KCQkJCWkudXBkYXRlKHsicHciOnNlbGYucHd9KQ0KCQkJcHJpbnQoKGsrIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgQ3JhY2sgU3RhcnRlZC4uLiIraysiXG5bIitwKyLigKIiK2srIl0iK3ArIiBBY2NvdW50IFtLYWNoaS1PS10gU2F2ZWQgdG8gOiBLYWNoaS1PSy50eHQiK2srIlxuWyIrcCsi4oCiIitrKyJdIitwKyIgQWNjb3VudCBbS2FjaGktQ1BdIFNhdmVkIHRvIDogS2FjaGktQ1AudHh0XG4iKSkNCgkJCVRocmVhZFBvb2woMzApLm1hcChzZWxmLm1haW4sc2VsZi5mbCkNCgkJCW9zLnJlbW92ZShzZWxmLmFwaykNCgkJCWV4aXQoKQ0KCWRlZiBtYWluKHNlbGYsZmwpOg0KCQl0cnk6DQoJCQlmb3IgaSBpbiBmbC5nZXQoInB3Iik6DQoJCQkJbG9nPW1iYXNpYyhmbC5nZXQoImlkIiksDQoJCQkJCWksImh0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbSIpDQoJCQkJaWYgbG9nLmdldCgic3RhdHVzIik9PSJjcCI6DQoJCQkJCXRyeToNCgkJCQkJCWtlPXJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitmbC5nZXQoImlkIikrIj9hY2Nlc3NfdG9rZW49IitvcGVuKCJsb2dpbi50eHQiLCJyIikucmVhZCgpKQ0KCQkJCQkJdHQ9anNvbi5sb2FkcyhrZS50ZXh0KQ0KCQkJCQkJdHRsPXR0WyJiaXJ0aGRheSJdDQoJCQkJCWV4Y2VwdDpwYXNzDQoJCQkJCXByaW50KCgiXHJceDFiWzA7MzNtW1x4MWJbMDszN21LYWNoaS1DUFx4MWJbMDszM21dICVzIOKAoiAlcyDigKIgJXNceDFiWzBtICAgIiUoZmwuZ2V0KCJpZCIpLGksc3RyKHR0bCkpKSkNCgkJCQkJc2VsZi5jcC5hcHBlbmQoIiVzIOKAoiAlcyIlKGZsLmdldCgiaWQiKSxpKSkNCgkJCQkJb3BlbigiS2FjaGktQ1AudHh0IiwiYSsiKS53cml0ZSgNCgkJCQkJCSIlcyDigKIgJXMg4oCiICVzXG4iJShmbC5nZXQoImlkIiksaSxzdHIodHRsKSkpDQoJCQkJCWJyZWFrDQoJCQkJZWxpZiBsb2cuZ2V0KCJzdGF0dXMiKT09InN1Y2Nlc3MiOg0KCQkJCQlwcmludCgoIlxyXHgxYlswOzMybVtceDFiWzA7MzdtS2FjaGktT0tceDFiWzA7MzJtXSAlcyDigKIgJXMgICAgICAgICAgICAgICAiJShmbC5nZXQoImlkIiksaSkpKQ0KCQkJCQlzZWxmLmFkYS5hcHBlbmQoIiVzIOKAoiAlcyIlKGZsLmdldCgiaWQiKSxpKSkNCgkJCQkJaWYgZmwuZ2V0KCJpZCIpIGluIG9wZW4oIkthY2hpLU9LLnR4dCIpLnJlYWQoKToNCgkJCQkJCWJyZWFrDQoJCQkJCWVsc2U6DQoJCQkJCQlvcGVuKCJLYWNoaS1PSy50eHQiLCJhKyIpLndyaXRlKA0KCQkJCQkJIiVzIOKAoiAlc1xuIiUoZmwuZ2V0KCJpZCIpLGkpKQ0KCQkJCQlicmVhaw0KCQkJCWVsc2U6Y29udGludWUNCgkJCQkJDQoJCQlzZWxmLmtvKz0xDQoJCQlwcmludCgiXHJceDFiWzA7MzNtW1x4MWJbMDszN21DcmFja1x4MWJbMDszM21dXHgxYlswOzM3bSAlcy8lcyBceDFiWzA7MzJtW1x4MWJbMDszN21LYWNoaS1PSyA6ICVzXHgxYlswOzMybV0gXHgxYlswOzMzbVtceDFiWzA7MzdtS2FjaGktQ1AgOiAlc1x4MWJbMDszM21dXHgxYlswOzM3bSIlKHNlbGYua28sbGVuKHNlbGYuZmwpLGxlbihzZWxmLmFkYSksbGVuKHNlbGYuY3ApKSwgZW5kPScgJyk7c3lzLnN0ZG91dC5mbHVzaCgpDQoJCWV4Y2VwdDoNCgkJCXNlbGYubWFpbihmbCkNCg0KIyMjIFJFU1VMVCAjIyMNCg0KZGVmIHJlc3VsdHMoRGFwdW50YSxLcmFoa3JhaCk6DQogICAgICAgIGlmIGxlbihEYXB1bnRhKSAhPTA6DQogICAgICAgICAgICAgICAgcHJpbnQoKCJbT0tdIDogIitzdHIobGVuKERhcHVudGEpKSkpDQogICAgICAgIGlmIGxlbihLcmFoa3JhaCkgIT0wOg0KICAgICAgICAgICAgICAgIHByaW50KCgiW0NQXSA6ICIrc3RyKGxlbihLcmFoa3JhaCkpKSkNCiAgICAgICAgaWYgbGVuKERhcHVudGEpID09MCBhbmQgbGVuKEtyYWhrcmFoKSA9PTA6DQogICAgICAgICAgICAgICAgcHJpbnQoIlxuIikNCiAgICAgICAgICAgICAgICBwcmludCgoaysiWyIrcCsiISIraysiXSIrcCsiIE5vIFJlc3VsdCBGb3VuZCIpKQ0KDQpkZWYgcmVzcygpOg0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIGJhbm5lcigpDQogICAgcHJpbnQoKGsrIlxuWyAiK3ArIlJlc3VsdCBDcmFjayIraysiIF0iK3ApKQ0KICAgIHByaW50KChrKyJcblsgIitwKyJPSyIraysiIF0iK3ApKQ0KICAgIHRyeToNCiAgICAgICAgb3Muc3lzdGVtKCJjYXQgS2FjaGktT0sudHh0IikNCiAgICBleGNlcHQgSU9FcnJvcjoNCiAgICAgICAgcHJpbnQoKGsrIlsiK3ArIiEiK2srIl0iK3ArIiBObyBSZXN1bHQgRm91bmQiKSkNCiAgICBwcmludCgoaysiXG5bICIrcCsiQ1AiK2srIiBdIitwKSkNCiAgICB0cnk6DQogICAgICAgIG9zLnN5c3RlbSgiY2F0IEthY2hpLUNQLnR4dCIpDQogICAgZXhjZXB0IElPRXJyb3I6DQogICAgICAgIHByaW50KChrKyJbIitwKyIhIitrKyJdIitwKyIgTm8gUmVzdWx0IEZvdW5kIikpDQogICAgaW5wdXQoaysiXG5bICIrcCsiQmFjayIraysiIF0iK3ApDQogICAgbWVudSgpDQoNCmlmIF9fbmFtZV9fPT0iX19tYWluX18iOg0KCW9zLnN5c3RlbSgiZ2l0IHB1bGwiKQ0KCW1lbnUoKQ0K"))